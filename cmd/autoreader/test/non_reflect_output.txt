/************************************
 *
 * This file contains auto-generated methods to help certain structs
 * implement boardgame.SubState and boardgame.MutableSubState. It was
 * generated by autoreader.
 *
 * DO NOT EDIT by hand.
 *
 ************************************/
package examplepkg

import (
	"errors"
	"github.com/jkomoros/boardgame"
)

// Implementation for myStruct

var myStructReaderProps map[string]boardgame.PropertyType = map[string]boardgame.PropertyType{
	"MyBool":       boardgame.TypeBool,
	"MyInt":        boardgame.TypeInt,
	"MySizedStack": boardgame.TypeSizedStack,
	"TheTimer":     boardgame.TypeTimer,
}

func (m *myStruct) Reader() boardgame.PropertyReader {
	return boardgame.DefaultReader(m)
}

func (m *myStruct) ReadSetter() boardgame.PropertyReadSetter {
	return boardgame.DefaultReadSetter(m)
}

// Implementation for myOtherStruct

var myOtherStructReaderProps map[string]boardgame.PropertyType = map[string]boardgame.PropertyType{
	"MyGrowableStack": boardgame.TypeGrowableStack,
	"ThePlayerIndex":  boardgame.TypePlayerIndex,
}

func (m *myOtherStruct) Reader() boardgame.PropertyReader {
	return boardgame.DefaultReader(m)
}

func (m *myOtherStruct) ReadSetter() boardgame.PropertyReadSetter {
	return boardgame.DefaultReadSetter(m)
}

// Implementation for onlyReader

var onlyReaderReaderProps map[string]boardgame.PropertyType = map[string]boardgame.PropertyType{
	"MyString": boardgame.TypeString,
}

func (o *onlyReader) Reader() boardgame.PropertyReader {
	return boardgame.DefaultReader(o)
}

// Implementation for onlyReadSetter

var onlyReadSetterReaderProps map[string]boardgame.PropertyType = map[string]boardgame.PropertyType{
	"MyInt": boardgame.TypeInt,
}

func (o *onlyReadSetter) ReadSetter() boardgame.PropertyReadSetter {
	return boardgame.DefaultReadSetter(o)
}

